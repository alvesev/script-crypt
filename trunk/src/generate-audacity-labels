#!/bin/bash

#
#   Copyright 2007-2021 Alex Vesev
#
#   This file is part of Script Crypt. This is generator of Audacity
#   track labels using text source file.
#
#   Input file format is:
#       %M:%S Label caption text
#       %H:%M:%S Label caption text
#
#   I.e.:
#       05:04 Label caption text
#       02:45:32 Label caption text
#
#   Script Crypt is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   Script Crypt is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with Script Crypt. If not, see <http://www.gnu.org/licenses/>.
#
##

PS4="+:\$( basename \"\${0}\" ):\${LINENO}: "
set -eu
set +x
#if [ "${*/#--verbose/}" != "${*}" ] ; then
#    set -x
#    shift 1
#fi

declare -r file_in="${1?Need input file as CLI argument. File format is: two fields separated by space, the first field is a colon separated time notch in form of '%M:%S' or '%H:%M:%S', the second field is a regular text. I.e. strings like: 02:14:56 Caption text.}"
declare -r file_out="${file_in}.Audacity_track_labels.txt"

declare -i h=0 m=0 s=0

function print_audacity_label_file_string {
    local -r seconds="${1}"
    local -r label_caption="${2}"

    echo -n     "${seconds}"
    echo -ne    "\t"
    echo -n     "${seconds}"
    echo -ne    "\t"
    echo        "${label_caption// /_}"
}

###
##
#

echo -n "" > "${file_out}"

while read time_notch caption ; do
    if [ -z "${time_notch}" ] || [ -z "${caption}" ] ; then
        echo "ERROR:${0}:${LINENO}: Time notch or label caption is empty in input." >&2
        exit 1
    fi
    IFS=: read -r var1 var2 var3 <<< "${time_notch}"
    if [ -n "${var3}" ] ; then
        h=$((10#${var1}))
        m=$((10#${var2}))
        s=$((10#${var3}))
    elif [ -n "${var2}" ] && [ -z "${var3}" ] ; then
        h=0
        m=$((10#${var1}))
        s=$((10#${var2}))
    fi
    time_seconds=$(( $h*60*60 + $m*60 + $s )).0
    print_audacity_label_file_string "${time_seconds}" "${caption}" >> "${file_out}"
done <<< "$( cat "${file_in}" )"

set +x
echo "INFO:$( basename "${0}" ):${LINENO}: Job done. See '${file_out}'." >&2
